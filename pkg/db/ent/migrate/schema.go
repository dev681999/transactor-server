// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "document_number", Type: field.TypeString, Unique: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
	}
	// OperationTypesColumns holds the columns for the "operation_types" table.
	OperationTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString},
		{Name: "is_debit", Type: field.TypeBool},
	}
	// OperationTypesTable holds the schema information for the "operation_types" table.
	OperationTypesTable = &schema.Table{
		Name:       "operation_types",
		Columns:    OperationTypesColumns,
		PrimaryKey: []*schema.Column{OperationTypesColumns[0]},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "balance", Type: field.TypeFloat64},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "account_id", Type: field.TypeInt},
		{Name: "operation_type_id", Type: field.TypeInt},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_accounts_transactions",
				Columns:    []*schema.Column{TransactionsColumns[6]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "transactions_operation_types_transactions",
				Columns:    []*schema.Column{TransactionsColumns[7]},
				RefColumns: []*schema.Column{OperationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "transaction_account_id",
				Unique:  false,
				Columns: []*schema.Column{TransactionsColumns[6]},
			},
			{
				Name:    "transaction_account_id_operation_type_id",
				Unique:  false,
				Columns: []*schema.Column{TransactionsColumns[6], TransactionsColumns[7]},
			},
			{
				Name:    "transaction_account_id_timestamp",
				Unique:  false,
				Columns: []*schema.Column{TransactionsColumns[6], TransactionsColumns[5]},
			},
			{
				Name:    "transaction_account_id_operation_type_id_timestamp",
				Unique:  false,
				Columns: []*schema.Column{TransactionsColumns[6], TransactionsColumns[7], TransactionsColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		OperationTypesTable,
		TransactionsTable,
	}
)

func init() {
	TransactionsTable.ForeignKeys[0].RefTable = AccountsTable
	TransactionsTable.ForeignKeys[1].RefTable = OperationTypesTable
}
