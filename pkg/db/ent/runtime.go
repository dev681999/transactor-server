// Code generated by ent, DO NOT EDIT.

package ent

import (
	"transactor-server/pkg/db/ent/account"
	"transactor-server/pkg/db/ent/operationtype"
	"transactor-server/pkg/db/ent/transaction"
	"transactor-server/pkg/db/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountMixin := schema.Account{}.Mixin()
	accountMixinFields0 := accountMixin[0].Fields()
	_ = accountMixinFields0
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescCreateTime is the schema descriptor for create_time field.
	accountDescCreateTime := accountMixinFields0[0].Descriptor()
	// account.DefaultCreateTime holds the default value on creation for the create_time field.
	account.DefaultCreateTime = accountDescCreateTime.Default.(func() time.Time)
	// accountDescUpdateTime is the schema descriptor for update_time field.
	accountDescUpdateTime := accountMixinFields0[1].Descriptor()
	// account.DefaultUpdateTime holds the default value on creation for the update_time field.
	account.DefaultUpdateTime = accountDescUpdateTime.Default.(func() time.Time)
	// account.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	account.UpdateDefaultUpdateTime = accountDescUpdateTime.UpdateDefault.(func() time.Time)
	// accountDescName is the schema descriptor for name field.
	accountDescName := accountFields[1].Descriptor()
	// account.NameValidator is a validator for the "name" field. It is called by the builders before save.
	account.NameValidator = func() func(string) error {
		validators := accountDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	operationtypeMixin := schema.OperationType{}.Mixin()
	operationtypeMixinFields0 := operationtypeMixin[0].Fields()
	_ = operationtypeMixinFields0
	operationtypeFields := schema.OperationType{}.Fields()
	_ = operationtypeFields
	// operationtypeDescCreateTime is the schema descriptor for create_time field.
	operationtypeDescCreateTime := operationtypeMixinFields0[0].Descriptor()
	// operationtype.DefaultCreateTime holds the default value on creation for the create_time field.
	operationtype.DefaultCreateTime = operationtypeDescCreateTime.Default.(func() time.Time)
	// operationtypeDescUpdateTime is the schema descriptor for update_time field.
	operationtypeDescUpdateTime := operationtypeMixinFields0[1].Descriptor()
	// operationtype.DefaultUpdateTime holds the default value on creation for the update_time field.
	operationtype.DefaultUpdateTime = operationtypeDescUpdateTime.Default.(func() time.Time)
	// operationtype.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	operationtype.UpdateDefaultUpdateTime = operationtypeDescUpdateTime.UpdateDefault.(func() time.Time)
	transactionMixin := schema.Transaction{}.Mixin()
	transactionMixinFields0 := transactionMixin[0].Fields()
	_ = transactionMixinFields0
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescCreateTime is the schema descriptor for create_time field.
	transactionDescCreateTime := transactionMixinFields0[0].Descriptor()
	// transaction.DefaultCreateTime holds the default value on creation for the create_time field.
	transaction.DefaultCreateTime = transactionDescCreateTime.Default.(func() time.Time)
	// transactionDescUpdateTime is the schema descriptor for update_time field.
	transactionDescUpdateTime := transactionMixinFields0[1].Descriptor()
	// transaction.DefaultUpdateTime holds the default value on creation for the update_time field.
	transaction.DefaultUpdateTime = transactionDescUpdateTime.Default.(func() time.Time)
	// transaction.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	transaction.UpdateDefaultUpdateTime = transactionDescUpdateTime.UpdateDefault.(func() time.Time)
}
